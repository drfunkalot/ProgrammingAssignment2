install.packages("slidify")
install.packages("slidify")
install.packages("ggplot2")
library(ggplot2)
search
search()
install.packages("KernSmooth")
library(KernSmooth)
install.packages("devtools")
find_rtools()
library(devtools)
find_rtools()
install.packages(swirl)
install.packages("swirl)
install.packages("swirl")
library(swirl)
swirl()
5+7
x <- 5+7
x
y <- x - 3
y
z <- C(1.1,9,3.14)
X <- C(1.1, 9 ,3.14)
z <- c(1.1, 9 ,3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
dir()
?list.files
args(list.files)
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
dir()
file.exists("mytest.r")
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path("folder1","folder2")
?dir.create
dir.create(file.path("testdir2","testdir3",recursive=TRUE)
CC
dir.create(file.path("testdir2","testdir3"),recursive=TRUE)
unlink("testdir2")
unlink("testdir2",recursive = TRUE)
setwd("old.dir")
setwd(old.dir)
unlink("testdir")
unlink("testdir",recursive = "TRUE")
unlink("testdir",recursive = TRUE)
library(swirl)
swirl()
1:20
pi:10
15:1
?'?'
?`:`
seq(1,20)
seq(0,10,by=0.5)
my_seq<- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,times = 40)
rep(c(0,1,2), times = 10)
rep(c(0,1,2), each = 10)
library(datasets)
data("mtcars")
mean(mtcars$mpg,mtcars$cyl)
lapply(mtcars,mean
)
?mtcars
setwd("G:/GitRepos/ProgrammingAssignment2")
ls()
dir()
source('G:/GitRepos/ProgrammingAssignment2/cachematrix.R')
?solve
source('G:/GitRepos/ProgrammingAssignment2/cachematrix.R')
source('G:/GitRepos/ProgrammingAssignment2/cachematrix.R')
source('G:/GitRepos/ProgrammingAssignment2/cachematrix.R')
a <- makeCacheMatrix(c(1,2,3,4))
cacheSolve(a)
x <- matrix(c(1,2,12,13), nrow = 2, ncol = 2)
a <- makeCacheMatrix(x)
cacheSolve(a)
cachesolve(a)
cacheSolve(a)
cachesolve(a)
cachesolve(a)
cacheSolve(a)
a <- makeCacheMatrix(c(1,2,3,4))
b <- makeCacheMatrix(c(3,2,1,1,1,-1,0,1,2))
cachesolve(a)
cacheSolve(a)
cacheSolve(b)
a <- makeCacheMatrix(c(1,2,3,4))
cacheSolve(a)
a <- makeCacheMatrix(c(1,2,3,4),nrow = 2, ncol = 2)
x <- matrix(c(1,2,12,13), nrow = 2, ncol = 2)
a <- makeCacheMatrix(x)
cacheSolve(a)
x <- matrix(c(1,2,12,13), nrow = 2, ncol = 2)
a <- makeCacheMatrix(x)
cacheSolve(a)
cacheSolve(a)
debugSource('G:/GitRepos/ProgrammingAssignment2/cachematrix.R')
a <- makeCacheMatrix(x)
cacheSolve(a)
cacheSolve(a)
a <- makeCacheMatrix(x)
cacheSolve(a)
x$getinv()
x$getinv
cacheSolve(a)
cacheSolve(a)
cacheSolve(a)
cacheSolve(a)
source('G:/GitRepos/ProgrammingAssignment2/cachematrix.R')
cacheSolve(a)
a <- makeCacheMatrix(x)
cacheSolve(a)
cacheSolve(a)
cacheSolve(a)
x <- matrix(c(1,3,4,1,9,5,6,9,8), nrow = 3, ncol = 3)
x
a <- makeCacheMatrix(x)
cacheSolve(a)
k <- matrix(c(1,2,3,4,5,6,7,8,9),nrows = 3, ncols = 3)
k <- matrix(c(1,2,3,4,5,6,7,8,9),nrow = 3, ncol = 3)
k
b <- makeCacheMatrix(k)
cacheSolve(b)
cacheSolve(a)
b <- makeCacheMatrix(k)
cacheSolve(b)
source('G:/GitRepos/ProgrammingAssignment2/cachematrix.R')
x <- matrix(c(1,3,4,1,9,5,6,9,8), nrow = 3, ncol = 3)
a <- makeCacheMatrix(x)
cacheSolve(a)
source('G:/GitRepos/ProgrammingAssignment2/cachematrix.R')
source('G:/GitRepos/ProgrammingAssignment2/cachematrix.R')
a <- makeCacheMatrix(x)
cacheSolve(a)
source('G:/GitRepos/ProgrammingAssignment2/cachematrix.R')
